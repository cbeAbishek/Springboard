<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="18" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-01T20:27:39 IST" name="AutomationFrameworkParallelSuite" finished-at="2025-10-01T20:27:53 IST" duration-ms="13799">
    <groups>
    </groups>
    <test started-at="2025-10-01T20:27:39 IST" name="JsonPlaceholder_API_Tests" finished-at="2025-10-01T20:27:50 IST" duration-ms="10976">
      <class name="org.automation.api.JsonPlaceholderTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:39 IST" name="setup" finished-at="2025-10-01T20:27:40 IST" duration-ms="957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testDeletePost()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testDeletePost" description="Delete a post" finished-at="2025-10-01T20:27:44 IST" duration-ms="4278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePost -->
        <test-method signature="testGetCommentsForPost()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testGetCommentsForPost" description="Get comments for a post" finished-at="2025-10-01T20:27:50 IST" duration-ms="9774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCommentsForPost -->
        <test-method signature="testCreateComment()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testCreateComment" description="Create a comment" finished-at="2025-10-01T20:27:50 IST" duration-ms="9785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateComment -->
        <test-method signature="testGetAllPosts()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testGetAllPosts" description="Get all posts" finished-at="2025-10-01T20:27:50 IST" duration-ms="9772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllPosts -->
        <test-method signature="testGetSinglePost()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testGetSinglePost" description="Get single post by ID" finished-at="2025-10-01T20:27:50 IST" duration-ms="9916" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path id doesn't match.
Expected: <999>
  Actual: <1>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path id doesn't match.
Expected: <999>
  Actual: <1>

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$9.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:183)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$4.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at org.automation.api.JsonPlaceholderTests.testGetSinglePost(JsonPlaceholderTests.java:49)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSinglePost -->
        <test-method signature="testGetAllUsers()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testGetAllUsers" description="Get all users" finished-at="2025-10-01T20:27:50 IST" duration-ms="9768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllUsers -->
        <test-method signature="testCreatePost()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testCreatePost" description="Create a new post" finished-at="2025-10-01T20:27:50 IST" duration-ms="9770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatePost -->
        <test-method signature="testPatchPost()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testPatchPost" description="Patch an existing post" finished-at="2025-10-01T20:27:50 IST" duration-ms="9771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatchPost -->
        <test-method signature="testGetSingleUser()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testGetSingleUser" description="Get single user by ID" finished-at="2025-10-01T20:27:50 IST" duration-ms="9767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleUser -->
        <test-method signature="testUpdatePost()[pri:0, instance:org.automation.api.JsonPlaceholderTests@318ba8c8]" started-at="2025-10-01T20:27:40 IST" name="testUpdatePost" description="Update an existing post" finished-at="2025-10-01T20:27:50 IST" duration-ms="9767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePost -->
      </class> <!-- org.automation.api.JsonPlaceholderTests -->
    </test> <!-- JsonPlaceholder_API_Tests -->
    <test started-at="2025-10-01T20:27:39 IST" name="BlazeDemo_UI_Tests" finished-at="2025-10-01T20:27:53 IST" duration-ms="13799">
      <class name="org.automation.ui.BlazeDemoTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:39 IST" name="setUp" finished-at="2025-10-01T20:27:46 IST" duration-ms="7030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPurchasePageContainsForm()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testPurchasePageContainsForm" description="Verify Purchase Page Contains Form" finished-at="2025-10-01T20:27:49 IST" duration-ms="3175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPurchasePageContainsForm -->
        <test-method signature="testFlightSearchNavigation()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testFlightSearchNavigation" description="Verify Flight Search Navigation from Home Page" finished-at="2025-10-01T20:27:51 IST" duration-ms="4987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlightSearchNavigation -->
        <test-method signature="testNavigateToHomePage()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testNavigateToHomePage" description="Navigate to Home Page" finished-at="2025-10-01T20:27:49 IST" duration-ms="3076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigateToHomePage -->
        <test-method signature="testConfirmationPage()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testConfirmationPage" description="Verify Confirmation Page" finished-at="2025-10-01T20:27:48 IST" duration-ms="1556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfirmationPage -->
        <test-method signature="testPurchaseFlight()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testPurchaseFlight" description="Purchase Flight" finished-at="2025-10-01T20:27:53 IST" duration-ms="6400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPurchaseFlight -->
        <test-method signature="testHomePageTitle()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testHomePageTitle" description="Verify Home Page Title" finished-at="2025-10-01T20:27:48 IST" duration-ms="1529" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [WrongTitle] but found [BlazeDemo]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [WrongTitle] but found [BlazeDemo]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at org.automation.ui.BlazeDemoTests.testHomePageTitle(BlazeDemoTests.java:20)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomePageTitle -->
        <test-method signature="testHomePageContainsDepartureAndDestination()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testHomePageContainsDepartureAndDestination" description="Verify Departure and Destination fields exist on Home Page" finished-at="2025-10-01T20:27:48 IST" duration-ms="2156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomePageContainsDepartureAndDestination -->
        <test-method signature="testSelectFirstFlight()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testSelectFirstFlight" description="Select First Flight from Flights Page" finished-at="2025-10-01T20:27:51 IST" duration-ms="4425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectFirstFlight -->
        <test-method signature="testFlightSelectionPage()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testFlightSelectionPage" description="Verify Flight Selection Page UI Elements" finished-at="2025-10-01T20:27:48 IST" duration-ms="2093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlightSelectionPage -->
        <test-method signature="testFillPurchaseForm()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:46 IST" name="testFillPurchaseForm" description="Fill Purchase Form" finished-at="2025-10-01T20:27:53 IST" duration-ms="6273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFillPurchaseForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:48 IST" name="tearDown" finished-at="2025-10-01T20:27:52 IST" duration-ms="3542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testConfirmationPage status=SUCCESS method=BlazeDemoTests.testConfirmationPage()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:48 IST" name="tearDown" finished-at="2025-10-01T20:27:52 IST" duration-ms="3190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFlightSelectionPage status=SUCCESS method=BlazeDemoTests.testFlightSelectionPage()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:48 IST" name="tearDown" finished-at="2025-10-01T20:27:52 IST" duration-ms="3210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomePageTitle status=FAILURE method=BlazeDemoTests.testHomePageTitle()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:49 IST" name="tearDown" finished-at="2025-10-01T20:27:51 IST" duration-ms="2571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomePageContainsDepartureAndDestination status=SUCCESS method=BlazeDemoTests.testHomePageContainsDepartureAndDestination()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:50 IST" name="tearDown" finished-at="2025-10-01T20:27:52 IST" duration-ms="2115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNavigateToHomePage status=SUCCESS method=BlazeDemoTests.testNavigateToHomePage()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:50 IST" name="tearDown" finished-at="2025-10-01T20:27:52 IST" duration-ms="2283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPurchasePageContainsForm status=SUCCESS method=BlazeDemoTests.testPurchasePageContainsForm()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:51 IST" name="tearDown" finished-at="2025-10-01T20:27:52 IST" duration-ms="776" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectFirstFlight status=SUCCESS method=BlazeDemoTests.testSelectFirstFlight()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:51 IST" name="tearDown" finished-at="2025-10-01T20:27:52 IST" duration-ms="590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFlightSearchNavigation status=SUCCESS method=BlazeDemoTests.testFlightSearchNavigation()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:53 IST" name="tearDown" finished-at="2025-10-01T20:27:53 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFillPurchaseForm status=SUCCESS method=BlazeDemoTests.testFillPurchaseForm()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a]" started-at="2025-10-01T20:27:53 IST" name="tearDown" finished-at="2025-10-01T20:27:53 IST" duration-ms="250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPurchaseFlight status=SUCCESS method=BlazeDemoTests.testPurchaseFlight()[pri:0, instance:org.automation.ui.BlazeDemoTests@161b062a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.automation.ui.BlazeDemoTests -->
    </test> <!-- BlazeDemo_UI_Tests -->
  </suite> <!-- AutomationFrameworkParallelSuite -->
</testng-results>
