name: Regression Automation CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Cancel older runs on same ref to save minutes
concurrency:
  group: regression-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  actions: read
  pull-requests: write

# Global environment (non-secret). Secrets pulled where needed.
env:
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_NAME: automation_tests
  DB_USER: root
  CI: true
  MAVEN_OPTS: -Xmx1G -XX:+UseG1GC -Djava.awt.headless=true

# Reusable step groups via YAML anchors
x-steps-build: &build-steps
  - name: Checkout
    uses: actions/checkout@v4

  - name: Set up Temurin JDK 17 (with Maven cache)
    uses: actions/setup-java@v4
    with:
      distribution: temurin
      java-version: 17
      cache: maven

  - name: Print Maven & Java versions
    run: |
      java -version
      mvn -v

  - name: Resolve & Cache Dependencies (go-offline)
    run: mvn -B -q dependency:go-offline

  - name: Build (skip tests)
    run: mvn -B -DskipTests clean install

x-steps-wait-mysql: &wait-mysql
  - name: Wait for MySQL readiness
    run: |
      echo "Waiting for MySQL to become healthy..."
      for i in {1..30}; do
        if mysqladmin ping -h127.0.0.1 -u${DB_USER} -p"${{ secrets.DB_PASS }}" --silent; then
          echo "MySQL is up."; break; fi
        sleep 2
        if [ $i -eq 30 ]; then echo "MySQL failed to start" >&2; exit 1; fi
      done
      echo "Create / migrate schema if needed" 
      mysql -h127.0.0.1 -u${DB_USER} -p"${{ secrets.DB_PASS }}" -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME}; USE ${DB_NAME}; CREATE TABLE IF NOT EXISTS execution_log (id INT AUTO_INCREMENT PRIMARY KEY, test_name VARCHAR(255), status VARCHAR(20), test_type VARCHAR(20), us_id VARCHAR(50), tc_id VARCHAR(255), artifact VARCHAR(500), screenshot_path VARCHAR(500), execution_time DATETIME DEFAULT CURRENT_TIMESTAMP);"

jobs:
  api-tests:
    name: üß™ API Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      mysql:
        image: mysql:8.0
        ports: [ "3306:3306" ]
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
          MYSQL_DATABASE: ${{ env.DB_NAME }}
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      *build-steps
      *wait-mysql
      - name: Run API Tests (parallel)
        run: |
          mvn -B test \
            -Dtest=**/*JsonPlaceholderTests.java \
            -DthreadCount=10 -Ddataproviderthreadcount=10
      - name: Upload Surefire Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: api-surefire-reports
            path: target/surefire-reports/**/*
      - name: Publish JUnit (API)
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: API Tests
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit

  ui-tests:
    name: üåê UI Tests (Chrome Headless)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: api-tests  # run after API to reduce DB contention (adjust if parallel desired)
    services:
      mysql:
        image: mysql:8.0
        ports: [ "3306:3306" ]
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
          MYSQL_DATABASE: ${{ env.DB_NAME }}
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      *build-steps
      *wait-mysql
      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1
      - name: Show Chrome Version
        run: |
          google-chrome --version || chrome --version || echo "Chrome not found"
      - name: Run UI Tests (Headless)
        env:
          DB_PASS: ${{ secrets.DB_PASS }}
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 &
          # WebDriverManager in code handles driver download automatically.
          mvn -B test \
            -Dtest=**/*BlazeDemoTests.java \
            -DthreadCount=6 -Ddataproviderthreadcount=6
      - name: Upload UI Artifacts (Reports & Screenshots)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-artifacts
          path: |
            artifacts/**/*
            target/screenshots/**/*
            target/surefire-reports/**/*
      - name: Publish JUnit (UI)
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: UI Tests
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit
      - name: Job Summary
        if: always()
        run: |
          PASSED=$(grep -ho 'Tests run: .*' target/surefire-reports/*.txt | tail -1 || true)
          echo "### UI Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "\n\`$PASSED\`" >> $GITHUB_STEP_SUMMARY

  static-analysis:
    name: üõ°Ô∏è Static Analysis (Optional)
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' # adjust as needed
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Basic Lint (SpotBugs placeholder)
        run: |
          echo "(Placeholder) Add SpotBugs / PMD / Checkstyle plugins to pom for full analysis." 
          mvn -q -DskipTests verify || true
      - name: Upload Maven Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-logs
          path: target/*.log

# Notes:
# - Set repository secret DB_PASS with the MySQL root password.
# - static-analysis job is optional; expand with real plugins later.
# - To run UI & API truly in parallel remove 'needs: api-tests'.
# - WebDriverManager handles chromedriver; manual download removed.
